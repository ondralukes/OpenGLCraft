#version 330 core

// Input vertex data, different for all executions of this shader.
layout(location = 0) in vec2 screenPos;
layout(location = 1) in vec2 inUv;

// Output data ; will be interpolated for each fragment.
out vec2 uv;

void main(){

	// Output position of the vertex, in clip space
	// map [0..1280][0..720] to [-1..1][-1..1]
	vec2 pos = screenPos - vec2(640,360);
	pos /= vec2(640,360);
	gl_Position =  vec4(pos,0,1);

	// UV of the vertex. No special space for this one.
	uv = inUv;
}
